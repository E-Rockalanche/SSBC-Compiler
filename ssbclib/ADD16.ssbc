/*
ADD16:
	-calculate sum of two 16 bit numbers
	-returns 16 bit sum on stack
*/

.global ADD16

ADD16:
	popext16 ADD16_RET_ADDR
	popext ADD16_HIGH1
	popext ADD16_LOW1
	popext ADD16_HIGH2
	pushext ADD16_LOW1
	jsr ADDWC
	pushext ADD16_HIGH1
	pushext ADD16_HIGH2
	add
	pushext CARRY
	add
	jump ?
ADD16_RET_ADDR: .word 0
ADD16_HIGH1: .byte 0
ADD16_LOW1: .byte 0
ADD16_HIGH2: .byte 0
ADD16_LOW2: .byte 0

ADDWC:
//add two bytes and track if there is a carry
//returns sum and saves the carry in CARRY
	popext16 ADDWC_RET_ADDR
//test sign of first byte
	test
	popext ADDWC_TEMP
	pushimm 0
	jnn ADDWC_FIRST_POS
//first negative
	add
	jnn ADDWC_DIFF_SIGNS
//both are negative
	pushimm 1
	popext CARRY
	pushext ADDWC_TEMP
	add
	jump ADDWC_RETURN
ADDWC_FIRST_POS:
	add
	jnn ADDWC_SECOND_POS
ADDWC_DIFF_SIGNS:
	pushext ADDWC_TEMP
	add
	jnn ADDWC_DIFF_RES_POS
//diff result is negative
	pushimm 0
	popext CARRY
	jump ADDWC_RETURN
ADDWC_DIFF_RES_POS:
	pushimm 1
	popext CARRY
	jnn ADDWC_RETURN
ADDWC_SECOND_POS:
	pushimm 0
	popext CARRY
	pushext ADDWC_TEMP
	add
ADDWC_RETURN:
	jump ?
ADDWC_RET_ADDR: .word 0
ADDWC_TEMP: .byte 0
CARRY: .byte 0