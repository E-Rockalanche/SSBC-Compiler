/* ########## void bubbleSort(int *, int) ########### */
	void_bubbleSort_int_Ptr_int:
/* Pop return address to temp */
	popext16 L2
/* Pop function arguments */
	popext L3
	popext16 L4
/* Push return address from temp */
	pushext16 L2
/* Function body */
/* For Loop */
/* Literal */
	pushimm 0
	popext L5 + 0
	L6:
/* < */
/* - */
/* Literal */
	pushimm 1
	pushext L3 + 0
	sub
/* End - */
	pushext L5 + 0
	sub
	popinh
	jnn L10
	pushimm 1
	jump L11
	L10: pushimm 0
	L11:
/* End < */
	test popinh
	jnz L7
	jump L8
	L7:
/* For Loop */
/* Literal */
	pushimm 0
	popext L12 + 0
	L13:
/* < */
/* - */
/* Literal */
	pushimm 1
	pushext L3 + 0
	sub
/* End - */
	pushext L12 + 0
	sub
	popinh
	jnn L17
	pushimm 1
	jump L18
	L17: pushimm 0
	L18:
/* End < */
	test popinh
	jnz L14
	jump L15
	L14:
/* > */
/* Array accessor */
	pushext L4 + 1
	pushext L4 + 0
	pushext L12 + 0
/* Converting int to long */
	test
	jnn L19
	pushimm 0xff
	jump L20
	L19:
	pushimm 0
	L20:
/* End type conversion */
	jsr ADD16
	pushimm 1
	jsr PUSH_FROM_ADDR
/* End array accessor */
/* Array accessor */
	pushext L4 + 1
	pushext L4 + 0
/* + */
/* Literal */
	pushimm 1
	pushext L12 + 0
	add
/* End + */
/* Converting int to long */
	test
	jnn L21
	pushimm 0xff
	jump L22
	L21:
	pushimm 0
	L22:
/* End type conversion */
	jsr ADD16
	pushimm 1
	jsr PUSH_FROM_ADDR
/* End array accessor */
	sub
	popinh
	jnn L23
	pushimm 1
	jump L24
	L23: pushimm 0
	L24:
/* End > */
	test popinh
	jnz L25
	jump L26
	L25: 
/* Array accessor */
	pushext L4 + 1
	pushext L4 + 0
	pushext L12 + 0
/* Converting int to long */
	test
	jnn L29
	pushimm 0xff
	jump L30
	L29:
	pushimm 0
	L30:
/* End type conversion */
	jsr ADD16
	pushimm 1
	jsr PUSH_FROM_ADDR
/* End array accessor */
	popext L28 + 0
/* Assignment */
/* Array accessor */
	pushext L4 + 1
	pushext L4 + 0
/* + */
/* Literal */
	pushimm 1
	pushext L12 + 0
	add
/* End + */
/* Converting int to long */
	test
	jnn L31
	pushimm 0xff
	jump L32
	L31:
	pushimm 0
	L32:
/* End type conversion */
	jsr ADD16
	pushimm 1
	jsr PUSH_FROM_ADDR
/* End array accessor */
/* Array assignment */
	pushext L4 + 1
	pushext L4 + 0
	pushext L12 + 0
/* Converting int to long */
	test
	jnn L33
	pushimm 0xff
	jump L34
	L33:
	pushimm 0
	L34:
/* End type conversion */
	jsr ADD16
	pushimm 1
	jsr POP_TO_ADDR
/* End array assignment */
/* End Assignment */
/* Assignment */
	pushext L28 + 0
/* Array assignment */
	pushext L4 + 1
	pushext L4 + 0
/* + */
/* Literal */
	pushimm 1
	pushext L12 + 0
	add
/* End + */
/* Converting int to long */
	test
	jnn L35
	pushimm 0xff
	jump L36
	L35:
	pushimm 0
	L36:
/* End type conversion */
	jsr ADD16
	pushimm 1
	jsr POP_TO_ADDR
/* End array assignment */
/* End Assignment */
	jump L27
	L26: 
	L27: 
	L16:
/* Assignment */
/* + */
/* Literal */
	pushimm 1
	pushext L12 + 0
	add
/* End + */
	popext L12 + 0
/* End Assignment */
	jump L13
	L15:
	L9:
/* Assignment */
/* + */
/* Literal */
	pushimm 1
	pushext L5 + 0
	add
/* End + */
	popext L5 + 0
/* End Assignment */
	jump L6
	L8:
/* Literal */
	pushimm 1
/* Converting const int to bool */
	pushimm 0
	sub
	popinh
	jnn L39
	pushimm 1
	jump L38
	L39: pushimm 0
	L38:
/* End type conversion */
	popext L37 + 0
/* For Loop */
/* Literal */
	pushimm 0
	popext L40 + 0
	L41:
/* < */
/* - */
/* Literal */
	pushimm 1
	pushext L3 + 0
	sub
/* End - */
	pushext L40 + 0
	sub
	popinh
	jnn L45
	pushimm 1
	jump L46
	L45: pushimm 0
	L46:
/* End < */
	test popinh
	jnz L42
	jump L43
	L42:
/* > */
/* Array accessor */
	pushext L4 + 1
	pushext L4 + 0
	pushext L40 + 0
/* Converting int to long */
	test
	jnn L47
	pushimm 0xff
	jump L48
	L47:
	pushimm 0
	L48:
/* End type conversion */
	jsr ADD16
	pushimm 1
	jsr PUSH_FROM_ADDR
/* End array accessor */
/* Array accessor */
	pushext L4 + 1
	pushext L4 + 0
/* + */
/* Literal */
	pushimm 1
	pushext L40 + 0
	add
/* End + */
/* Converting int to long */
	test
	jnn L49
	pushimm 0xff
	jump L50
	L49:
	pushimm 0
	L50:
/* End type conversion */
	jsr ADD16
	pushimm 1
	jsr PUSH_FROM_ADDR
/* End array accessor */
	sub
	popinh
	jnn L51
	pushimm 1
	jump L52
	L51: pushimm 0
	L52:
/* End > */
	test popinh
	jnz L53
	jump L54
	L53: 
/* Assignment */
/* Literal */
	pushimm 0
/* Converting const int to bool */
	pushimm 0
	sub
	popinh
	jnn L57
	pushimm 1
	jump L56
	L57: pushimm 0
	L56:
/* End type conversion */
	popext L37 + 0
/* End Assignment */
/* Break */
	jump L43
	L54: 
	L55: 
	L44:
/* Assignment */
/* + */
/* Literal */
	pushimm 1
	pushext L40 + 0
	add
/* End + */
	popext L40 + 0
/* End Assignment */
	jump L41
	L43:
/* Literal */
	pushimm16 65532
/* Converting const long to int * */
/* End type conversion */
	popext L58 + 0
	popext L58 + 1
/* Assignment */
	pushext L37 + 0
/* Converting bool to int */
/* End type conversion */
/* Array assignment */
	pushext L58 + 1
	pushext L58 + 0
/* Literal */
	pushimm 2
/* Converting const int to long */
	test
	jnn L59
	pushimm 0xff
	jump L60
	L59:
	pushimm 0
	L60:
/* End type conversion */
	jsr ADD16
	pushimm 1
	jsr POP_TO_ADDR
/* End array assignment */
/* End Assignment */
/* Return to call address */
	L0:
	popext16 L2
	jump ?
	L2: .word 0
/* ########## End of void bubbleSort(int *, int) ########## */
/* Local data to function */
	L1:
	L3: .byte 0
	L4: .byte 0
	L61: .byte 0
	L5: L37: .byte 0
	L12: L40: L58: .byte 0
	L28: .byte 0
/* End of local memory */
/* ########## void main() ########### */
	.start
/* Function body */
/* Literal */
	pushimm16 65532
/* Converting const long to int * */
/* End type conversion */
	popext L65 + 0
	popext L65 + 1
/* Assignment */
/* Literal */
	pushimm 99
/* Array assignment */
	pushimm16 L66
/* Literal */
	pushimm 0
/* Converting const int to long */
	test
	jnn L67
	pushimm 0xff
	jump L68
	L67:
	pushimm 0
	L68:
/* End type conversion */
	jsr ADD16
	pushimm 1
	jsr POP_TO_ADDR
/* End array assignment */
/* End Assignment */
/* Assignment */
/* Literal */
	pushimm 78
/* Array assignment */
	pushimm16 L66
/* Literal */
	pushimm 1
/* Converting const int to long */
	test
	jnn L69
	pushimm 0xff
	jump L70
	L69:
	pushimm 0
	L70:
/* End type conversion */
	jsr ADD16
	pushimm 1
	jsr POP_TO_ADDR
/* End array assignment */
/* End Assignment */
/* Assignment */
/* Literal */
	pushimm 66
/* Array assignment */
	pushimm16 L66
/* Literal */
	pushimm 2
/* Converting const int to long */
	test
	jnn L71
	pushimm 0xff
	jump L72
	L71:
	pushimm 0
	L72:
/* End type conversion */
	jsr ADD16
	pushimm 1
	jsr POP_TO_ADDR
/* End array assignment */
/* End Assignment */
/* Assignment */
/* Literal */
	pushimm 7
/* Array assignment */
	pushimm16 L66
/* Literal */
	pushimm 3
/* Converting const int to long */
	test
	jnn L73
	pushimm 0xff
	jump L74
	L73:
	pushimm 0
	L74:
/* End type conversion */
	jsr ADD16
	pushimm 1
	jsr POP_TO_ADDR
/* End array assignment */
/* End Assignment */
/* Compiling function arguments */
	pushimm16 L66
/* Literal */
	pushimm 4
	jsr void_bubbleSort_int_Ptr_int
/* Literal */
	pushimm 1
/* Converting const int to bool */
	pushimm 0
	sub
	popinh
	jnn L77
	pushimm 1
	jump L76
	L77: pushimm 0
	L76:
/* End type conversion */
	popext L75 + 0
/* For Loop */
/* Literal */
	pushimm 0
	popext L78 + 0
	L79:
/* < */
/* Literal */
	pushimm 3
	pushext L78 + 0
	sub
	popinh
	jnn L83
	pushimm 1
	jump L84
	L83: pushimm 0
	L84:
/* End < */
	test popinh
	jnz L80
	jump L81
	L80:
/* > */
/* Array accessor */
	pushimm16 L66
	pushext L78 + 0
/* Converting int to long */
	test
	jnn L85
	pushimm 0xff
	jump L86
	L85:
	pushimm 0
	L86:
/* End type conversion */
	jsr ADD16
	pushimm 1
	jsr PUSH_FROM_ADDR
/* End array accessor */
/* Array accessor */
	pushimm16 L66
/* + */
/* Literal */
	pushimm 1
	pushext L78 + 0
	add
/* End + */
/* Converting int to long */
	test
	jnn L87
	pushimm 0xff
	jump L88
	L87:
	pushimm 0
	L88:
/* End type conversion */
	jsr ADD16
	pushimm 1
	jsr PUSH_FROM_ADDR
/* End array accessor */
	sub
	popinh
	jnn L89
	pushimm 1
	jump L90
	L89: pushimm 0
	L90:
/* End > */
	test popinh
	jnz L91
	jump L92
	L91: 
/* Assignment */
/* Literal */
	pushimm 0
/* Converting const int to bool */
	pushimm 0
	sub
	popinh
	jnn L95
	pushimm 1
	jump L94
	L95: pushimm 0
	L94:
/* End type conversion */
	popext L75 + 0
/* End Assignment */
/* Break */
	jump L81
	L92: 
	L93: 
	L82:
/* Assignment */
/* + */
/* Literal */
	pushimm 1
	pushext L78 + 0
	add
/* End + */
	popext L78 + 0
/* End Assignment */
	jump L79
	L81:
/* Assignment */
	pushext L75 + 0
/* Converting bool to int */
/* End type conversion */
/* Array assignment */
	pushext L65 + 1
	pushext L65 + 0
/* Literal */
	pushimm 0
/* Converting const int to long */
	test
	jnn L96
	pushimm 0xff
	jump L97
	L96:
	pushimm 0
	L97:
/* End type conversion */
	jsr ADD16
	pushimm 1
	jsr POP_TO_ADDR
/* End array assignment */
/* End Assignment */
/* Return to call address */
	L62:
	halt
/* ########## End of void main() ########## */
/* Local data to function */
	L63:
	L65: .byte 0
	L98: .byte 0
	L66: .byte 0
	L99: .byte 0
	L100: .byte 0
	L101: .byte 0
	L75: .byte 0
	L78: .byte 0
/* End of local memory */
