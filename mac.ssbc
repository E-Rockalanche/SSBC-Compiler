/* ########## long fibRecursive(long) ########### */
	longfibRecursivelong:
/* Pop return address to temp */
	popext16 L2
/* Pop function arguments */
	popext16 L3
/* Push return address from temp */
	pushext16 L2
/* Function body */
/* <= */
	pushext L3 + 1
	pushext L3 + 0
/* Literal */
	pushimm 0
/* Converting const int to long */
	test
	jnn L4
	pushimm 0xff
	jump L5
	L4:
	pushimm 0
	L5:
/* End type conversion */
	jsr SUB16
	jsr TEST16
	popext PSW
	popinh16
	jnn L6
	pushimm 0
	jump L7
	L6: pushimm 1
	L7:
/* End <= */
	test popinh
	jnz L8
	jump L9
	L8: 
/* Calculating return value */
/* Literal */
	pushimm 0
/* Converting const int to long */
	test
	jnn L11
	pushimm 0xff
	jump L12
	L11:
	pushimm 0
	L12:
/* End type conversion */
/* Return */
	jump L0
	L9: 
	L10: 
/* <= */
	pushext L3 + 1
	pushext L3 + 0
/* Literal */
	pushimm 2
/* Converting const int to long */
	test
	jnn L13
	pushimm 0xff
	jump L14
	L13:
	pushimm 0
	L14:
/* End type conversion */
	jsr SUB16
	jsr TEST16
	popext PSW
	popinh16
	jnn L15
	pushimm 0
	jump L16
	L15: pushimm 1
	L16:
/* End <= */
	test popinh
	jnz L17
	jump L18
	L17: 
/* Calculating return value */
/* Literal */
	pushimm 1
/* Converting const int to long */
	test
	jnn L20
	pushimm 0xff
	jump L21
	L20:
	pushimm 0
	L21:
/* End type conversion */
/* Return */
	jump L0
	L18: 
	L19: 
/* Calculating return value */
/* + */
/* Saving local scope */
	pushext L1 + 1
	pushext L1 + 0
/* Compiling function arguments */
/* - */
/* Literal */
	pushimm 2
/* Converting const int to long */
	test
	jnn L22
	pushimm 0xff
	jump L23
	L22:
	pushimm 0
	L23:
/* End type conversion */
	pushext L3 + 1
	pushext L3 + 0
	jsr SUB16
/* End - */
	jsr longfibRecursivelong
/* saving return value to temp location */
	popext L24 + 0
	popext L24 + 1
/* restoring function scope */
	popext L1 + 0
	popext L1 + 1
/* Restoring return value from temp location */
	pushext L24 + 1
	pushext L24 + 0
/* Saving local scope */
	pushext L1 + 1
	pushext L1 + 0
/* Compiling function arguments */
/* - */
/* Literal */
	pushimm 1
/* Converting const int to long */
	test
	jnn L25
	pushimm 0xff
	jump L26
	L25:
	pushimm 0
	L26:
/* End type conversion */
	pushext L3 + 1
	pushext L3 + 0
	jsr SUB16
/* End - */
	jsr longfibRecursivelong
/* saving return value to temp location */
	popext L27 + 0
	popext L27 + 1
/* restoring function scope */
	popext L1 + 0
	popext L1 + 1
/* Restoring return value from temp location */
	pushext L27 + 1
	pushext L27 + 0
	jsr ADD16
/* End + */
/* Return */
	jump L0
/* Return to call address */
	L0:
/* Pop return address to jump instruction */
	popext L28 + 0
	popext L28 + 1
	popext16 L2
	pushext L28 + 1
	pushext L28 + 0
	jump ?
	L2: .word 0
/* ########## End of long fibRecursive(long) ########## */
/* Local data to function */
	L1:
	L3: .byte 0
	L29: .byte 0
	L24: L27: .byte 0
	L30: .byte 0
/* End of local memory */
/* ########## void main() ########### */
	.start
/* Function body */
/* Assignment */
/* Literal */
	pushimm16 65532
/* Converting const long to int * */
/* End type conversion */
	popext L34 + 0
	popext L34 + 1
/* End Assignment */
/* Assignment */
/* Array accessor */
	pushext L34 + 1
	pushext L34 + 0
/* Literal */
	pushimm 1
/* Converting const int to long */
	test
	jnn L36
	pushimm 0xff
	jump L37
	L36:
	pushimm 0
	L37:
/* End type conversion */
	jsr ADD16
	pushimm 1
	jsr PUSH_FROM_ADDR
/* End array accessor */
/* Converting int to long */
	test
	jnn L38
	pushimm 0xff
	jump L39
	L38:
	pushimm 0
	L39:
/* End type conversion */
	popext L35 + 0
	popext L35 + 1
/* End Assignment */
/* Assignment */
/* Saving local scope */
	pushext L32 + 3
	pushext L32 + 2
	pushext L32 + 1
	pushext L32 + 0
/* Compiling function arguments */
	pushext L35 + 1
	pushext L35 + 0
	jsr longfibRecursivelong
/* saving return value to temp location */
	popext L40 + 0
	popext L40 + 1
/* restoring function scope */
	popext L32 + 0
	popext L32 + 1
	popext L32 + 2
	popext L32 + 3
/* Restoring return value from temp location */
	pushext L40 + 1
	pushext L40 + 0
/* Converting long to int */
	popinh
/* End type conversion */
/* Array assignment */
	pushext L34 + 1
	pushext L34 + 0
/* Literal */
	pushimm 0
/* Converting const int to long */
	test
	jnn L41
	pushimm 0xff
	jump L42
	L41:
	pushimm 0
	L42:
/* End type conversion */
	jsr ADD16
	pushimm 1
	jsr POP_TO_ADDR
/* End array assignment */
/* End Assignment */
/* Return to call address */
	L31:
	halt
/* ########## End of void main() ########## */
/* Local data to function */
	L32:
	L34: .byte 0
	L43: .byte 0
	L35: .byte 0
	L44: .byte 0
	L40: .byte 0
	L45: .byte 0
/* End of local memory */
L28: .array 2
