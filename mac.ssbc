/* ########## long fibRecursive(long) ########### */
	longfibRecursivelong:
/* Pop return address to temp */
	popext16 L2
/* Pop function arguments */
	popext16 L3
/* Push return address from temp */
	pushext16 L2
/* Function body */
/* <= */
	pushext L3 + 1
	pushext L3 + 0
/* Literal */
	pushimm 0
/* Converting const int to long */
	test
	jnn L4
	pushimm 0xff
	jump L5
	L4:
	pushimm 0
	L5:
/* End type conversion */
	jsr SUB16
	jsr TEST16
	popext PSW
	popinh16
	jnn L6
	pushimm 0
	jump L7
	L6: pushimm 1
	L7:
/* End <= */
	test popinh
	jnz L8
	jump L9
	L8: 
/* Calculating return value */
/* Literal */
	pushimm 0
/* Converting const int to long */
	test
	jnn L11
	pushimm 0xff
	jump L12
	L11:
	pushimm 0
	L12:
/* End type conversion */
/* Return */
	jump L0
	L9: 
	L10: 
/* <= */
	pushext L3 + 1
	pushext L3 + 0
/* Literal */
	pushimm 2
/* Converting const int to long */
	test
	jnn L13
	pushimm 0xff
	jump L14
	L13:
	pushimm 0
	L14:
/* End type conversion */
	jsr SUB16
	jsr TEST16
	popext PSW
	popinh16
	jnn L15
	pushimm 0
	jump L16
	L15: pushimm 1
	L16:
/* End <= */
	test popinh
	jnz L17
	jump L18
	L17: 
/* Calculating return value */
/* Literal */
	pushimm 1
/* Converting const int to long */
	test
	jnn L20
	pushimm 0xff
	jump L21
	L20:
	pushimm 0
	L21:
/* End type conversion */
/* Return */
	jump L0
	L18: 
	L19: 
/* Calculating return value */
/* + */
/* Saving local scope */
	pushext L1 + 1
	pushext L1 + 0
/* Compiling function arguments */
/* - */
/* Literal */
	pushimm 1
/* Converting const int to long */
	test
	jnn L22
	pushimm 0xff
	jump L23
	L22:
	pushimm 0
	L23:
/* End type conversion */
	pushext L3 + 1
	pushext L3 + 0
	jsr SUB16
/* End - */
	jsr longfibRecursivelong
/* saving return value to temp location */
	popext L24 + 0
	popext L24 + 1
/* restoring function scope */
	popext L1 + 0
	popext L1 + 1
/* Restoring return value from temp location */
	pushext L24 + 1
	pushext L24 + 0
/* Saving local scope */
	pushext L1 + 1
	pushext L1 + 0
/* Compiling function arguments */
/* - */
/* Literal */
	pushimm 2
/* Converting const int to long */
	test
	jnn L25
	pushimm 0xff
	jump L26
	L25:
	pushimm 0
	L26:
/* End type conversion */
	pushext L3 + 1
	pushext L3 + 0
	jsr SUB16
/* End - */
	jsr longfibRecursivelong
/* saving return value to temp location */
	popext L27 + 0
	popext L27 + 1
/* restoring function scope */
	popext L1 + 0
	popext L1 + 1
/* Restoring return value from temp location */
	pushext L27 + 1
	pushext L27 + 0
	jsr ADD16
/* End + */
/* Return */
	jump L0
/* Return to call address */
	L0:
/* Pop return address to jump instruction */
	popext L28 + 0
	popext L28 + 1
	popext16 L2
	pushext L28 + 1
	pushext L28 + 0
	jump ?
	L2: .word 0
/* ########## End of long fibRecursive(long) ########## */
/* Local data to function */
	L1:
	L3: .byte 0
	L29: .byte 0
	L24: L27: .byte 0
	L30: .byte 0
/* End of local memory */
/* ########## long fibLoop(long) ########### */
	longfibLooplong:
/* Pop return address to temp */
	popext16 L33
/* Pop function arguments */
	popext16 L34
/* Push return address from temp */
	pushext16 L33
/* Function body */
/* <= */
	pushext L34 + 1
	pushext L34 + 0
/* Literal */
	pushimm 0
/* Converting const int to long */
	test
	jnn L35
	pushimm 0xff
	jump L36
	L35:
	pushimm 0
	L36:
/* End type conversion */
	jsr SUB16
	jsr TEST16
	popext PSW
	popinh16
	jnn L37
	pushimm 0
	jump L38
	L37: pushimm 1
	L38:
/* End <= */
	test popinh
	jnz L39
	jump L40
	L39: 
/* Calculating return value */
/* Literal */
	pushimm 0
/* Converting const int to long */
	test
	jnn L42
	pushimm 0xff
	jump L43
	L42:
	pushimm 0
	L43:
/* End type conversion */
/* Return */
	jump L31
	L40: 
	L41: 
/* Literal */
	pushimm 0
/* Converting const int to long */
	test
	jnn L45
	pushimm 0xff
	jump L46
	L45:
	pushimm 0
	L46:
/* End type conversion */
	popext L44 + 0
	popext L44 + 1
/* Literal */
	pushimm 1
/* Converting const int to long */
	test
	jnn L48
	pushimm 0xff
	jump L49
	L48:
	pushimm 0
	L49:
/* End type conversion */
	popext L47 + 0
	popext L47 + 1
/* Literal */
	pushimm 1
/* Converting const int to long */
	test
	jnn L51
	pushimm 0xff
	jump L52
	L51:
	pushimm 0
	L52:
/* End type conversion */
	popext L50 + 0
	popext L50 + 1
	L53:
/* < */
	pushext L34 + 1
	pushext L34 + 0
	pushext L50 + 1
	pushext L50 + 0
	jsr SUB16
	jsr TEST16
	popext PSW
	popinh16
	jnn L57
	pushimm 1
	jump L58
	L57: pushimm 0
	L58:
/* End < */
	test popinh
	jnz L54
	jump L55
	L54:
/* + */
	pushext L44 + 1
	pushext L44 + 0
	pushext L47 + 1
	pushext L47 + 0
	jsr ADD16
/* End + */
	popext L59 + 0
	popext L59 + 1
/* Assignment */
	pushext L47 + 1
	pushext L47 + 0
	popext L44 + 0
	popext L44 + 1
/* End Assignment */
/* Assignment */
	pushext L59 + 1
	pushext L59 + 0
	popext L47 + 0
	popext L47 + 1
/* End Assignment */
	L56:
/* Assignment */
/* + */
/* Literal */
	pushimm 1
/* Converting const int to long */
	test
	jnn L60
	pushimm 0xff
	jump L61
	L60:
	pushimm 0
	L61:
/* End type conversion */
	pushext L50 + 1
	pushext L50 + 0
	jsr ADD16
/* End + */
	popext L50 + 0
	popext L50 + 1
/* End Assignment */
	jump L53
	L55:
/* Calculating return value */
	pushext L47 + 1
	pushext L47 + 0
/* Return */
	jump L31
/* Return to call address */
	L31:
/* Pop return address to jump instruction */
	popext L62 + 0
	popext L62 + 1
	popext16 L33
	pushext L62 + 1
	pushext L62 + 0
	jump ?
	L33: .word 0
/* ########## End of long fibLoop(long) ########## */
/* Local data to function */
	L32:
	L34: .byte 0
	L63: .byte 0
	L44: .byte 0
	L64: .byte 0
	L47: .byte 0
	L65: .byte 0
	L50: .byte 0
	L66: .byte 0
	L59: .byte 0
	L67: .byte 0
/* End of local memory */
/* ########## void main() ########### */
	.start
/* Function body */
/* Literal */
	pushimm16 65532
/* Converting const long to int * */
/* End type conversion */
	popext L71 + 0
	popext L71 + 1
/* Array accessor */
	pushext L71 + 1
	pushext L71 + 0
/* Literal */
	pushimm 1
/* Converting const int to long */
	test
	jnn L73
	pushimm 0xff
	jump L74
	L73:
	pushimm 0
	L74:
/* End type conversion */
	jsr ADD16
	pushimm 1
	jsr PUSH_FROM_ADDR
/* End array accessor */
/* Converting int to long */
	test
	jnn L75
	pushimm 0xff
	jump L76
	L75:
	pushimm 0
	L76:
/* End type conversion */
	popext L72 + 0
	popext L72 + 1
/* Assignment */
/* Saving local scope */
	pushext L69 + 3
	pushext L69 + 2
	pushext L69 + 1
	pushext L69 + 0
/* Compiling function arguments */
	pushext L72 + 1
	pushext L72 + 0
	jsr longfibLooplong
/* saving return value to temp location */
	popext L77 + 0
	popext L77 + 1
/* restoring function scope */
	popext L69 + 0
	popext L69 + 1
	popext L69 + 2
	popext L69 + 3
/* Restoring return value from temp location */
	pushext L77 + 1
	pushext L77 + 0
/* Converting long to int */
	popinh
/* End type conversion */
/* Array assignment */
	pushext L71 + 1
	pushext L71 + 0
/* Literal */
	pushimm 0
/* Converting const int to long */
	test
	jnn L78
	pushimm 0xff
	jump L79
	L78:
	pushimm 0
	L79:
/* End type conversion */
	jsr ADD16
	pushimm 1
	jsr POP_TO_ADDR
/* End array assignment */
/* End Assignment */
/* Assignment */
/* Saving local scope */
	pushext L69 + 3
	pushext L69 + 2
	pushext L69 + 1
	pushext L69 + 0
/* Compiling function arguments */
	pushext L72 + 1
	pushext L72 + 0
	jsr longfibRecursivelong
/* saving return value to temp location */
	popext L80 + 0
	popext L80 + 1
/* restoring function scope */
	popext L69 + 0
	popext L69 + 1
	popext L69 + 2
	popext L69 + 3
/* Restoring return value from temp location */
	pushext L80 + 1
	pushext L80 + 0
/* Converting long to int */
	popinh
/* End type conversion */
/* Array assignment */
	pushext L71 + 1
	pushext L71 + 0
/* Literal */
	pushimm 2
/* Converting const int to long */
	test
	jnn L81
	pushimm 0xff
	jump L82
	L81:
	pushimm 0
	L82:
/* End type conversion */
	jsr ADD16
	pushimm 1
	jsr POP_TO_ADDR
/* End array assignment */
/* End Assignment */
/* Return to call address */
	L68:
	halt
/* ########## End of void main() ########## */
/* Local data to function */
	L69:
	L71: .byte 0
	L83: .byte 0
	L72: .byte 0
	L84: .byte 0
	L77: L80: .byte 0
	L85: .byte 0
/* End of local memory */
L28: .array 2
L62: .array 2
