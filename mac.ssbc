/* ########## long fibRecursive(long) ########### */
	longfibRecursivelong:
/* Pop return address to temp */
	popext16 L2
/* Pop function arguments */
	popext16 L3
/* Push return address from temp */
	pushext16 L2
/* Function body */
/* <= */
	pushext L3 + 1
	pushext L3 + 0
/* Literal */
	pushimm 0
/* Converting const int to long */
	test
	jnn L4
	pushimm 0xff
	jump L5
	L4:
	pushimm 0
	L5:
/* End type conversion */
	jsr SUB16
	jsr TEST16
	popext PSW
	popinh16
	jnn L6
	pushimm 0
	jump L7
	L6: pushimm 1
	L7:
/* End <= */
	test popinh
	jnz L8
	jump L9
	L8: 
/* Calculating return value */
/* Literal */
	pushimm 0
/* Converting const int to long */
	test
	jnn L11
	pushimm 0xff
	jump L12
	L11:
	pushimm 0
	L12:
/* End type conversion */
/* Return */
	jump L0
	L9: 
	L10: 
/* <= */
	pushext L3 + 1
	pushext L3 + 0
/* Literal */
	pushimm 2
/* Converting const int to long */
	test
	jnn L13
	pushimm 0xff
	jump L14
	L13:
	pushimm 0
	L14:
/* End type conversion */
	jsr SUB16
	jsr TEST16
	popext PSW
	popinh16
	jnn L15
	pushimm 0
	jump L16
	L15: pushimm 1
	L16:
/* End <= */
	test popinh
	jnz L17
	jump L18
	L17: 
/* Calculating return value */
/* Literal */
	pushimm 1
/* Converting const int to long */
	test
	jnn L20
	pushimm 0xff
	jump L21
	L20:
	pushimm 0
	L21:
/* End type conversion */
/* Return */
	jump L0
	L18: 
	L19: 
/* Calculating return value */
/* + */
/* Saving local scope */
	pushext L1 + 1
	pushext L1 + 0
/* Compiling function arguments */
/* - */
/* Literal */
	pushimm 2
/* Converting const int to long */
	test
	jnn L22
	pushimm 0xff
	jump L23
	L22:
	pushimm 0
	L23:
/* End type conversion */
	pushext L3 + 1
	pushext L3 + 0
	jsr SUB16
/* End - */
	jsr longfibRecursivelong
/* saving return value to temp location */
	popext16 L24
	popext L1 + 0
	popext L1 + 1
/* Restoring return value from temp location */
	pushext16 L24
/* Saving local scope */
	pushext L1 + 1
	pushext L1 + 0
/* Compiling function arguments */
/* - */
/* Literal */
	pushimm 1
/* Converting const int to long */
	test
	jnn L25
	pushimm 0xff
	jump L26
	L25:
	pushimm 0
	L26:
/* End type conversion */
	pushext L3 + 1
	pushext L3 + 0
	jsr SUB16
/* End - */
	jsr longfibRecursivelong
/* saving return value to temp location */
	popext16 L27
	popext L1 + 0
	popext L1 + 1
/* Restoring return value from temp location */
	pushext16 L27
	jsr ADD16
/* End + */
/* Return */
	jump L0
/* Return to call address */
	L0:
/* Pop return address to jump instruction */
	popext16 L28
	popext16 L2
	pushext16 L28
	jump ?
	L2: .word 0
/* ########## End of long fibRecursive(long) ########## */
/* Local data to function */
	L1:
	L3: .byte 0
	L29: .byte 0
/* End of local memory */
/* ########## long fibLoop(long) ########### */
	longfibLooplong:
/* Pop return address to temp */
	popext16 L32
/* Pop function arguments */
	popext16 L33
/* Push return address from temp */
	pushext16 L32
/* Function body */
/* <= */
	pushext L33 + 1
	pushext L33 + 0
/* Literal */
	pushimm 0
/* Converting const int to long */
	test
	jnn L34
	pushimm 0xff
	jump L35
	L34:
	pushimm 0
	L35:
/* End type conversion */
	jsr SUB16
	jsr TEST16
	popext PSW
	popinh16
	jnn L36
	pushimm 0
	jump L37
	L36: pushimm 1
	L37:
/* End <= */
	test popinh
	jnz L38
	jump L39
	L38: 
/* Calculating return value */
/* Literal */
	pushimm 0
/* Converting const int to long */
	test
	jnn L41
	pushimm 0xff
	jump L42
	L41:
	pushimm 0
	L42:
/* End type conversion */
/* Return */
	jump L30
	L39: 
	L40: 
/* Literal */
	pushimm 0
/* Converting const int to long */
	test
	jnn L44
	pushimm 0xff
	jump L45
	L44:
	pushimm 0
	L45:
/* End type conversion */
	popext L43 + 0
	popext L43 + 1
/* Literal */
	pushimm 1
/* Converting const int to long */
	test
	jnn L47
	pushimm 0xff
	jump L48
	L47:
	pushimm 0
	L48:
/* End type conversion */
	popext L46 + 0
	popext L46 + 1
/* Literal */
	pushimm 1
/* Converting const int to long */
	test
	jnn L50
	pushimm 0xff
	jump L51
	L50:
	pushimm 0
	L51:
/* End type conversion */
	popext L49 + 0
	popext L49 + 1
	L52:
/* < */
	pushext L33 + 1
	pushext L33 + 0
	pushext L49 + 1
	pushext L49 + 0
	jsr SUB16
	jsr TEST16
	popext PSW
	popinh16
	jnn L56
	pushimm 1
	jump L57
	L56: pushimm 0
	L57:
/* End < */
	test popinh
	jnz L53
	jump L54
	L53:
/* + */
	pushext L43 + 1
	pushext L43 + 0
	pushext L46 + 1
	pushext L46 + 0
	jsr ADD16
/* End + */
	popext L58 + 0
	popext L58 + 1
/* Assignment */
	pushext L46 + 1
	pushext L46 + 0
	popext L43 + 0
	popext L43 + 1
/* End Assignment */
/* Assignment */
	pushext L58 + 1
	pushext L58 + 0
	popext L46 + 0
	popext L46 + 1
/* End Assignment */
	L55:
/* Assignment */
/* + */
/* Literal */
	pushimm 1
/* Converting const int to long */
	test
	jnn L59
	pushimm 0xff
	jump L60
	L59:
	pushimm 0
	L60:
/* End type conversion */
	pushext L49 + 1
	pushext L49 + 0
	jsr ADD16
/* End + */
	popext L49 + 0
	popext L49 + 1
/* End Assignment */
	jump L52
	L54:
/* Calculating return value */
	pushext L46 + 1
	pushext L46 + 0
/* Return */
	jump L30
/* Return to call address */
	L30:
/* Pop return address to jump instruction */
	popext16 L61
	popext16 L32
	pushext16 L61
	jump ?
	L32: .word 0
/* ########## End of long fibLoop(long) ########## */
/* Local data to function */
	L31:
	L33: .byte 0
	L62: .byte 0
	L43: .byte 0
	L63: .byte 0
	L46: .byte 0
	L64: .byte 0
	L49: .byte 0
	L65: .byte 0
	L58: .byte 0
	L66: .byte 0
/* End of local memory */
/* ########## void main() ########### */
	.start
/* Function body */
/* Literal */
	pushimm16 65532
/* Converting const long to int * */
/* End type conversion */
	popext L70 + 0
	popext L70 + 1
/* Array accessor */
	pushext L70 + 1
	pushext L70 + 0
/* Literal */
	pushimm 1
/* Converting const int to long */
	test
	jnn L72
	pushimm 0xff
	jump L73
	L72:
	pushimm 0
	L73:
/* End type conversion */
	jsr ADD16
	pushimm 1
	jsr PUSH_FROM_ADDR
/* End array accessor */
/* Converting int to long */
	test
	jnn L74
	pushimm 0xff
	jump L75
	L74:
	pushimm 0
	L75:
/* End type conversion */
	popext L71 + 0
	popext L71 + 1
/* Assignment */
/* Saving local scope */
	pushext L68 + 3
	pushext L68 + 2
	pushext L68 + 1
	pushext L68 + 0
/* Compiling function arguments */
	pushext L71 + 1
	pushext L71 + 0
	jsr longfibLooplong
/* saving return value to temp location */
	popext16 L76
	popext L68 + 0
	popext L68 + 1
	popext L68 + 2
	popext L68 + 3
/* Restoring return value from temp location */
	pushext16 L76
/* Converting long to int */
	popinh
/* End type conversion */
/* Array assignment */
	pushext L70 + 1
	pushext L70 + 0
/* Literal */
	pushimm 0
/* Converting const int to long */
	test
	jnn L77
	pushimm 0xff
	jump L78
	L77:
	pushimm 0
	L78:
/* End type conversion */
	jsr ADD16
	pushimm 1
	jsr POP_TO_ADDR
/* End array assignment */
/* End Assignment */
/* Assignment */
/* Saving local scope */
	pushext L68 + 3
	pushext L68 + 2
	pushext L68 + 1
	pushext L68 + 0
/* Compiling function arguments */
	pushext L71 + 1
	pushext L71 + 0
	jsr longfibRecursivelong
/* saving return value to temp location */
	popext16 L79
	popext L68 + 0
	popext L68 + 1
	popext L68 + 2
	popext L68 + 3
/* Restoring return value from temp location */
	pushext16 L79
/* Converting long to int */
	popinh
/* End type conversion */
/* Array assignment */
	pushext L70 + 1
	pushext L70 + 0
/* Literal */
	pushimm 2
/* Converting const int to long */
	test
	jnn L80
	pushimm 0xff
	jump L81
	L80:
	pushimm 0
	L81:
/* End type conversion */
	jsr ADD16
	pushimm 1
	jsr POP_TO_ADDR
/* End array assignment */
/* End Assignment */
/* Return to call address */
	L67:
	halt
/* ########## End of void main() ########## */
/* Local data to function */
	L68:
	L70: .byte 0
	L82: .byte 0
	L71: .byte 0
	L83: .byte 0
/* End of local memory */
L24: .word 0
L27: .word 0
L28: .word 0
L61: .word 0
L76: .word 0
L79: .word 0
